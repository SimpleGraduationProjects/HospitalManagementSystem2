<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.neu.hoso.model.DrugsMapper" >
  <resultMap id="BaseResultMap" type="edu.neu.hoso.model.Drugs" >
    <constructor >
      <idArg column="Drugs_ID" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="Drugs_Code" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="Drugs_Name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="Drugs_Format" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="Drugs_Unit" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="Drugs_Manufacturer" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="Drugs_Dosage_ID" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="Drugs_Type_ID" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="Drugs_Price" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="Drugs_MnemonicCode" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="Create_Time" jdbcType="DATE" javaType="java.util.Date" />
      <arg column="Reverse1" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="Reverse2" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="Reverse3" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    Drugs_ID, Drugs_Code, Drugs_Name, Drugs_Format, Drugs_Unit, Drugs_Manufacturer, Drugs_Dosage_ID, 
    Drugs_Type_ID, Drugs_Price, Drugs_MnemonicCode, Create_Time, Reverse1, Reverse2, 
    Reverse3
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="edu.neu.hoso.example.DrugsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from drugs
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="edu.neu.hoso.example.DrugsExample" >
    delete from drugs
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="edu.neu.hoso.model.Drugs" >
    <selectKey resultType="java.lang.Integer" keyProperty="drugsId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into drugs
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="drugsCode != null" >
        Drugs_Code,
      </if>
      <if test="drugsName != null" >
        Drugs_Name,
      </if>
      <if test="drugsFormat != null" >
        Drugs_Format,
      </if>
      <if test="drugsUnit != null" >
        Drugs_Unit,
      </if>
      <if test="drugsManufacturer != null" >
        Drugs_Manufacturer,
      </if>
      <if test="drugsDosageId != null" >
        Drugs_Dosage_ID,
      </if>
      <if test="drugsTypeId != null" >
        Drugs_Type_ID,
      </if>
      <if test="drugsPrice != null" >
        Drugs_Price,
      </if>
      <if test="drugsMnemoniccode != null" >
        Drugs_MnemonicCode,
      </if>
      <if test="createTime != null" >
        Create_Time,
      </if>
      <if test="reverse1 != null" >
        Reverse1,
      </if>
      <if test="reverse2 != null" >
        Reverse2,
      </if>
      <if test="reverse3 != null" >
        Reverse3,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="drugsCode != null" >
        #{drugsCode,jdbcType=VARCHAR},
      </if>
      <if test="drugsName != null" >
        #{drugsName,jdbcType=VARCHAR},
      </if>
      <if test="drugsFormat != null" >
        #{drugsFormat,jdbcType=VARCHAR},
      </if>
      <if test="drugsUnit != null" >
        #{drugsUnit,jdbcType=VARCHAR},
      </if>
      <if test="drugsManufacturer != null" >
        #{drugsManufacturer,jdbcType=VARCHAR},
      </if>
      <if test="drugsDosageId != null" >
        #{drugsDosageId,jdbcType=INTEGER},
      </if>
      <if test="drugsTypeId != null" >
        #{drugsTypeId,jdbcType=INTEGER},
      </if>
      <if test="drugsPrice != null" >
        #{drugsPrice,jdbcType=DOUBLE},
      </if>
      <if test="drugsMnemoniccode != null" >
        #{drugsMnemoniccode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=DATE},
      </if>
      <if test="reverse1 != null" >
        #{reverse1,jdbcType=VARCHAR},
      </if>
      <if test="reverse2 != null" >
        #{reverse2,jdbcType=VARCHAR},
      </if>
      <if test="reverse3 != null" >
        #{reverse3,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.neu.hoso.example.DrugsExample" resultType="java.lang.Integer" >
    select count(*) from drugs
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update drugs
    <set >
      <if test="record.drugsId != null" >
        Drugs_ID = #{record.drugsId,jdbcType=INTEGER},
      </if>
      <if test="record.drugsCode != null" >
        Drugs_Code = #{record.drugsCode,jdbcType=VARCHAR},
      </if>
      <if test="record.drugsName != null" >
        Drugs_Name = #{record.drugsName,jdbcType=VARCHAR},
      </if>
      <if test="record.drugsFormat != null" >
        Drugs_Format = #{record.drugsFormat,jdbcType=VARCHAR},
      </if>
      <if test="record.drugsUnit != null" >
        Drugs_Unit = #{record.drugsUnit,jdbcType=VARCHAR},
      </if>
      <if test="record.drugsManufacturer != null" >
        Drugs_Manufacturer = #{record.drugsManufacturer,jdbcType=VARCHAR},
      </if>
      <if test="record.drugsDosageId != null" >
        Drugs_Dosage_ID = #{record.drugsDosageId,jdbcType=INTEGER},
      </if>
      <if test="record.drugsTypeId != null" >
        Drugs_Type_ID = #{record.drugsTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.drugsPrice != null" >
        Drugs_Price = #{record.drugsPrice,jdbcType=DOUBLE},
      </if>
      <if test="record.drugsMnemoniccode != null" >
        Drugs_MnemonicCode = #{record.drugsMnemoniccode,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        Create_Time = #{record.createTime,jdbcType=DATE},
      </if>
      <if test="record.reverse1 != null" >
        Reverse1 = #{record.reverse1,jdbcType=VARCHAR},
      </if>
      <if test="record.reverse2 != null" >
        Reverse2 = #{record.reverse2,jdbcType=VARCHAR},
      </if>
      <if test="record.reverse3 != null" >
        Reverse3 = #{record.reverse3,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update drugs
    set Drugs_ID = #{record.drugsId,jdbcType=INTEGER},
      Drugs_Code = #{record.drugsCode,jdbcType=VARCHAR},
      Drugs_Name = #{record.drugsName,jdbcType=VARCHAR},
      Drugs_Format = #{record.drugsFormat,jdbcType=VARCHAR},
      Drugs_Unit = #{record.drugsUnit,jdbcType=VARCHAR},
      Drugs_Manufacturer = #{record.drugsManufacturer,jdbcType=VARCHAR},
      Drugs_Dosage_ID = #{record.drugsDosageId,jdbcType=INTEGER},
      Drugs_Type_ID = #{record.drugsTypeId,jdbcType=INTEGER},
      Drugs_Price = #{record.drugsPrice,jdbcType=DOUBLE},
      Drugs_MnemonicCode = #{record.drugsMnemoniccode,jdbcType=VARCHAR},
      Create_Time = #{record.createTime,jdbcType=DATE},
      Reverse1 = #{record.reverse1,jdbcType=VARCHAR},
      Reverse2 = #{record.reverse2,jdbcType=VARCHAR},
      Reverse3 = #{record.reverse3,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.neu.hoso.model.Drugs" >
    update drugs
    <set >
      <if test="drugsCode != null" >
        Drugs_Code = #{drugsCode,jdbcType=VARCHAR},
      </if>
      <if test="drugsName != null" >
        Drugs_Name = #{drugsName,jdbcType=VARCHAR},
      </if>
      <if test="drugsFormat != null" >
        Drugs_Format = #{drugsFormat,jdbcType=VARCHAR},
      </if>
      <if test="drugsUnit != null" >
        Drugs_Unit = #{drugsUnit,jdbcType=VARCHAR},
      </if>
      <if test="drugsManufacturer != null" >
        Drugs_Manufacturer = #{drugsManufacturer,jdbcType=VARCHAR},
      </if>
      <if test="drugsDosageId != null" >
        Drugs_Dosage_ID = #{drugsDosageId,jdbcType=INTEGER},
      </if>
      <if test="drugsTypeId != null" >
        Drugs_Type_ID = #{drugsTypeId,jdbcType=INTEGER},
      </if>
      <if test="drugsPrice != null" >
        Drugs_Price = #{drugsPrice,jdbcType=DOUBLE},
      </if>
      <if test="drugsMnemoniccode != null" >
        Drugs_MnemonicCode = #{drugsMnemoniccode,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        Create_Time = #{createTime,jdbcType=DATE},
      </if>
      <if test="reverse1 != null" >
        Reverse1 = #{reverse1,jdbcType=VARCHAR},
      </if>
      <if test="reverse2 != null" >
        Reverse2 = #{reverse2,jdbcType=VARCHAR},
      </if>
      <if test="reverse3 != null" >
        Reverse3 = #{reverse3,jdbcType=VARCHAR},
      </if>
    </set>
    where Drugs_ID = #{drugsId,jdbcType=INTEGER}
  </update>

  <resultMap id="DrugsWithTypeAndDosage" type="edu.neu.hoso.model.Drugs">
    <id column="Drugs_ID" property="drugsId" />
    <result column="Drugs_Code" property="drugsCode" />
    <result column="Drugs_Name" property="drugsName" />
    <result column="Drugs_Format" property="drugsFormat" />
    <result column="Drugs_Price" property="drugsPrice" />
    <result column="Drugs_Manufacturer" property="drugsManufacturer" />
    <result column="Drugs_Dosage_ID" property="drugsDosageId" />
    <result column="Drugs_Type_ID" property="drugsTypeId" />
    <association javaType="ConstantItems" property="drugsDosage">
      <id column="Constant_Items_ID" property="constantItemsID" />
      <result column="Dosage_Name" property="constantItemsName" />
    </association>
    <association javaType="ConstantItems" property="drugsType">
      <id column="Constant_Items_ID" property="constantItemsID" />
      <result column="Type_Name" property="constantItemsName" />
    </association>
  </resultMap>

  <select id="getAllDrugsWithTypeAndDosage" resultMap="DrugsWithTypeAndDosage">
    SELECT
        Drugs_ID,
        Drugs_Code,
        Drugs_Name,
        Drugs_Format,
        Drugs_Price,
        Drugs_Manufacturer,
        Drugs_Dosage_ID,
        Drugs_Type_ID,
        constant_items.Constant_Items_Name AS Dosage_Name,
        c.Constant_Items_Name AS Type_Name
    FROM
        drugs
        LEFT JOIN constant_items AS c ON drugs.Drugs_Type_ID = c.Constant_Items_ID
        LEFT JOIN constant_items ON drugs.Drugs_Dosage_ID = constant_items.Constant_Items_ID
  </select>
  <!--  by alan-->
  <select id="getAllDrugs" resultMap="BaseResultMap">
    select *
    from drugs
  </select>

</mapper>