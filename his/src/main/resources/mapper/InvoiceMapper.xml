<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.neu.hoso.model.InvoiceMapper" >
  <resultMap id="BaseResultMap" type="edu.neu.hoso.model.Invoice" >
    <constructor >
      <idArg column="Invoice_ID" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="Invoice_NO" jdbcType="CHAR" javaType="java.lang.String" />
      <arg column="Total_Cost" jdbcType="DOUBLE" javaType="java.lang.Double" />
      <arg column="Is_Day_Cal" jdbcType="CHAR" javaType="java.lang.String" />
      <arg column="Pay_Time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="User_ID" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="Pay_Mode_ID" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    Invoice_ID, Invoice_NO, Total_Cost, Is_Day_Cal, Pay_Time, User_ID, Pay_Mode_ID
  </sql>
  <select id="selectByExample" parameterType="edu.neu.hoso.example.InvoiceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from invoice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="edu.neu.hoso.example.InvoiceExample">
    delete from invoice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="edu.neu.hoso.model.Invoice">
    <selectKey keyProperty="invoiceId" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into invoice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="invoiceNo != null">
        Invoice_NO,
      </if>
      <if test="totalCost != null">
        Total_Cost,
      </if>
      <if test="isDayCal != null">
        Is_Day_Cal,
      </if>
      <if test="payTime != null">
        Pay_Time,
      </if>
      <if test="userId != null">
        User_ID,
      </if>
      <if test="payModeId != null">
        Pay_Mode_ID,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="invoiceNo != null" >
        #{invoiceNo,jdbcType=CHAR},
      </if>
      <if test="totalCost != null">
        #{totalCost,jdbcType=DOUBLE},
      </if>
      <if test="isDayCal != null">
        #{isDayCal,jdbcType=CHAR},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="payModeId != null">
        #{payModeId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.neu.hoso.example.InvoiceExample" resultType="java.lang.Integer">
    select count(*) from invoice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update invoice
    <set>
      <if test="record.invoiceId != null">
        Invoice_ID = #{record.invoiceId,jdbcType=INTEGER},
      </if>
      <if test="record.invoiceNo != null" >
        Invoice_NO = #{record.invoiceNo,jdbcType=CHAR},
      </if>
      <if test="record.totalCost != null">
        Total_Cost = #{record.totalCost,jdbcType=DOUBLE},
      </if>
      <if test="record.isDayCal != null">
        Is_Day_Cal = #{record.isDayCal,jdbcType=CHAR},
      </if>
      <if test="record.payTime != null">
        Pay_Time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userId != null">
        User_ID = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.payModeId != null">
        Pay_Mode_ID = #{record.payModeId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update invoice
    set Invoice_ID = #{record.invoiceId,jdbcType=INTEGER},
      Invoice_NO = #{record.invoiceNo,jdbcType=CHAR},
      Total_Cost = #{record.totalCost,jdbcType=DOUBLE},
      Is_Day_Cal = #{record.isDayCal,jdbcType=CHAR},
      Pay_Time = #{record.payTime,jdbcType=TIMESTAMP},
      User_ID = #{record.userId,jdbcType=INTEGER},
      Pay_Mode_ID = #{record.payModeId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.neu.hoso.model.Invoice">
    update invoice
    <set >
      <if test="invoiceNo != null" >
        Invoice_NO = #{invoiceNo,jdbcType=CHAR},
      </if>
      <if test="totalCost != null">
        Total_Cost = #{totalCost,jdbcType=DOUBLE},
      </if>
      <if test="isDayCal != null">
        Is_Day_Cal = #{isDayCal,jdbcType=CHAR},
      </if>
      <if test="payTime != null">
        Pay_Time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userId != null">
        User_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="payModeId != null">
        Pay_Mode_ID = #{payModeId,jdbcType=INTEGER},
      </if>
    </set>
    where Invoice_ID = #{invoiceId,jdbcType=INTEGER}
  </update>
</mapper>