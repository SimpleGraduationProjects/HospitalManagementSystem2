<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.neu.hoso.model.MedicalRecordHomePageTemplateMapper" >
  <resultMap id="BaseResultMap" type="edu.neu.hoso.model.MedicalRecordHomePageTemplate" >
    <constructor >
      <idArg column="Medical_Record_Home_Page_Template_ID" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="Doctor_ID" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="Name" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="Scope" jdbcType="CHAR" javaType="java.lang.String" />
      <arg column="Chief_Complaint" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="Present_History" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="Physical_Examination" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>

  <!--  添加诊断列表的ResultMap by 29-y 2019.06.16 -->
  <resultMap id="SecondResultMap" type="edu.neu.hoso.model.MedicalRecordHomePageTemplate">
    <id property="medicalRecordHomePageTemplateId" column="Medical_Record_Home_Page_Template_ID" jdbcType="INTEGER" javaType="java.lang.Integer" />
    <result property="doctorId" column="Doctor_ID" jdbcType="INTEGER" javaType="java.lang.Integer" />
    <result property="name" column="Name" jdbcType="VARCHAR" javaType="java.lang.String" />
    <result property="scope" column="Scope" jdbcType="CHAR" javaType="java.lang.String" />
    <result property="chiefComplaint" column="Chief_Complaint" jdbcType="VARCHAR" javaType="java.lang.String" />
    <result property="presentHistory" column="Present_History" jdbcType="VARCHAR" javaType="java.lang.String" />
    <result property="physicalExamination" column="Physical_Examination" jdbcType="VARCHAR" javaType="java.lang.String" />
    <collection property="diagnosisTemplateList" ofType="edu.neu.hoso.model.DiagnosisTemplate" resultMap="edu.neu.hoso.model.DiagnosisTemplateMapper.SecondResultMap"/>
  </resultMap>

  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    Medical_Record_Home_Page_Template_ID, Doctor_ID, Name, Scope, Chief_Complaint, Present_History, 
    Physical_Examination
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="edu.neu.hoso.example.MedicalRecordHomePageTemplateExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from medical_record_home_page_template
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="edu.neu.hoso.example.MedicalRecordHomePageTemplateExample" >
    delete from medical_record_home_page_template
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="edu.neu.hoso.model.MedicalRecordHomePageTemplate" >
    <selectKey resultType="java.lang.Integer" keyProperty="medicalRecordHomePageTemplateId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into medical_record_home_page_template
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="doctorId != null" >
        Doctor_ID,
      </if>
      <if test="name != null" >
        Name,
      </if>
      <if test="scope != null" >
        Scope,
      </if>
      <if test="chiefComplaint != null" >
        Chief_Complaint,
      </if>
      <if test="presentHistory != null" >
        Present_History,
      </if>
      <if test="physicalExamination != null" >
        Physical_Examination,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="doctorId != null" >
        #{doctorId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="scope != null" >
        #{scope,jdbcType=CHAR},
      </if>
      <if test="chiefComplaint != null" >
        #{chiefComplaint,jdbcType=VARCHAR},
      </if>
      <if test="presentHistory != null" >
        #{presentHistory,jdbcType=VARCHAR},
      </if>
      <if test="physicalExamination != null" >
        #{physicalExamination,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.neu.hoso.example.MedicalRecordHomePageTemplateExample" resultType="java.lang.Integer" >
    select count(*) from medical_record_home_page_template
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update medical_record_home_page_template
    <set >
      <if test="record.medicalRecordHomePageTemplateId != null" >
        Medical_Record_Home_Page_Template_ID = #{record.medicalRecordHomePageTemplateId,jdbcType=INTEGER},
      </if>
      <if test="record.doctorId != null" >
        Doctor_ID = #{record.doctorId,jdbcType=INTEGER},
      </if>
      <if test="record.name != null" >
        Name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.scope != null" >
        Scope = #{record.scope,jdbcType=CHAR},
      </if>
      <if test="record.chiefComplaint != null" >
        Chief_Complaint = #{record.chiefComplaint,jdbcType=VARCHAR},
      </if>
      <if test="record.presentHistory != null" >
        Present_History = #{record.presentHistory,jdbcType=VARCHAR},
      </if>
      <if test="record.physicalExamination != null" >
        Physical_Examination = #{record.physicalExamination,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update medical_record_home_page_template
    set Medical_Record_Home_Page_Template_ID = #{record.medicalRecordHomePageTemplateId,jdbcType=INTEGER},
      Doctor_ID = #{record.doctorId,jdbcType=INTEGER},
      Name = #{record.name,jdbcType=VARCHAR},
      Scope = #{record.scope,jdbcType=CHAR},
      Chief_Complaint = #{record.chiefComplaint,jdbcType=VARCHAR},
      Present_History = #{record.presentHistory,jdbcType=VARCHAR},
      Physical_Examination = #{record.physicalExamination,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.neu.hoso.model.MedicalRecordHomePageTemplate" >
    update medical_record_home_page_template
    <set >
      <if test="doctorId != null" >
        Doctor_ID = #{doctorId,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        Name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="scope != null" >
        Scope = #{scope,jdbcType=CHAR},
      </if>
      <if test="chiefComplaint != null" >
        Chief_Complaint = #{chiefComplaint,jdbcType=VARCHAR},
      </if>
      <if test="presentHistory != null" >
        Present_History = #{presentHistory,jdbcType=VARCHAR},
      </if>
      <if test="physicalExamination != null" >
        Physical_Examination = #{physicalExamination,jdbcType=VARCHAR},
      </if>
    </set>
    where Medical_Record_Home_Page_Template_ID = #{medicalRecordHomePageTemplateId,jdbcType=INTEGER}
  </update>
</mapper>