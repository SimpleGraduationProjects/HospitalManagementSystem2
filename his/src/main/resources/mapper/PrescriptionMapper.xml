<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.neu.hoso.model.PrescriptionMapper" >
  <resultMap id="BaseResultMap" type="edu.neu.hoso.model.Prescription" >
    <constructor >
      <idArg column="Prescription_ID" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="Medical_Record_ID" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="Doctor_ID" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="Submit_Time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
      <arg column="Prescription_Type" jdbcType="CHAR" javaType="java.lang.String" />
      <arg column="Valid_Status" jdbcType="CHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>

  <!--  添加处方条目列表的ResultMap by @29-y 2019.06.18 -->
  <resultMap id="SecondResultMap" type="edu.neu.hoso.model.Prescription">
    <id property="prescriptionId" column="Prescription_ID" jdbcType="INTEGER" javaType="java.lang.Integer" />
    <result property="medicalRecordId" column="Medical_Record_ID" jdbcType="INTEGER" javaType="java.lang.Integer" />
    <result property="doctorId" column="Doctor_ID" jdbcType="INTEGER" javaType="java.lang.Integer" />
    <result property="submitTime" column="Submit_Time" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    <result property="prescriptionType" column="Prescription_Type" jdbcType="CHAR" javaType="java.lang.String" />
    <result property="validStatus" column="Valid_Status" jdbcType="CHAR" javaType="java.lang.String" />
    <collection property="prescriptionItemsList" ofType="edu.neu.hoso.model.PrescriptionItems" resultMap="edu.neu.hoso.model.PrescriptionItemsMapper.SecondResultMap"/>
  </resultMap>


  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    Prescription_ID, Medical_Record_ID, Doctor_ID, Submit_Time, Prescription_Type, Valid_Status
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="edu.neu.hoso.example.PrescriptionExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from prescription
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="edu.neu.hoso.example.PrescriptionExample" >
    delete from prescription
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="edu.neu.hoso.model.Prescription" >
    <selectKey resultType="java.lang.Integer" keyProperty="prescriptionId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into prescription
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="medicalRecordId != null" >
        Medical_Record_ID,
      </if>
      <if test="doctorId != null" >
        Doctor_ID,
      </if>
      <if test="submitTime != null" >
        Submit_Time,
      </if>
      <if test="prescriptionType != null" >
        Prescription_Type,
      </if>
      <if test="validStatus != null" >
        Valid_Status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="medicalRecordId != null" >
        #{medicalRecordId,jdbcType=INTEGER},
      </if>
      <if test="doctorId != null" >
        #{doctorId,jdbcType=INTEGER},
      </if>
      <if test="submitTime != null" >
        #{submitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="prescriptionType != null" >
        #{prescriptionType,jdbcType=CHAR},
      </if>
      <if test="validStatus != null" >
        #{validStatus,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.neu.hoso.example.PrescriptionExample" resultType="java.lang.Integer" >
    select count(*) from prescription
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update prescription
    <set >
      <if test="record.prescriptionId != null" >
        Prescription_ID = #{record.prescriptionId,jdbcType=INTEGER},
      </if>
      <if test="record.medicalRecordId != null" >
        Medical_Record_ID = #{record.medicalRecordId,jdbcType=INTEGER},
      </if>
      <if test="record.doctorId != null" >
        Doctor_ID = #{record.doctorId,jdbcType=INTEGER},
      </if>
      <if test="record.submitTime != null" >
        Submit_Time = #{record.submitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.prescriptionType != null" >
        Prescription_Type = #{record.prescriptionType,jdbcType=CHAR},
      </if>
      <if test="record.validStatus != null" >
        Valid_Status = #{record.validStatus,jdbcType=CHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update prescription
    set Prescription_ID = #{record.prescriptionId,jdbcType=INTEGER},
      Medical_Record_ID = #{record.medicalRecordId,jdbcType=INTEGER},
      Doctor_ID = #{record.doctorId,jdbcType=INTEGER},
      Submit_Time = #{record.submitTime,jdbcType=TIMESTAMP},
      Prescription_Type = #{record.prescriptionType,jdbcType=CHAR},
      Valid_Status = #{record.validStatus,jdbcType=CHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.neu.hoso.model.Prescription" >
    update prescription
    <set >
      <if test="medicalRecordId != null" >
        Medical_Record_ID = #{medicalRecordId,jdbcType=INTEGER},
      </if>
      <if test="doctorId != null" >
        Doctor_ID = #{doctorId,jdbcType=INTEGER},
      </if>
      <if test="submitTime != null" >
        Submit_Time = #{submitTime,jdbcType=TIMESTAMP},
      </if>
      <if test="prescriptionType != null" >
        Prescription_Type = #{prescriptionType,jdbcType=CHAR},
      </if>
      <if test="validStatus != null" >
        Valid_Status = #{validStatus,jdbcType=CHAR},
      </if>
    </set>
    where Prescription_ID = #{prescriptionId,jdbcType=INTEGER}
  </update>

  <select id="getAllPrescriptionMedical" resultMap="PrescriptionMedical">
    select prescription.*,drugs.*,prescription_items.*
    from prescription join prescription_items on prescription.Prescription_ID=prescription_items.Prescription_ID
					  join drugs on prescription_items.Drags_ID = drugs.Drugs_ID
  </select>
  <resultMap id="PrescriptionMedical" type="edu.neu.hoso.model.Prescription">
    <id column="Prescription_ID" jdbcType="INTEGER" javaType="java.lang.Integer" property="prescriptionId"/>
    <result column="Medical_Record_ID" jdbcType="INTEGER" javaType="java.lang.Integer" property="medicalRecordId"/>
    <result column="Doctor_ID" jdbcType="INTEGER" javaType="java.lang.Integer" property="doctorId"/>
    <result column="Submit_Time" jdbcType="TIMESTAMP" javaType="java.util.Date" property="submitTime"/>
    <result column="Prescription_Type" jdbcType="CHAR" javaType="java.lang.String" property="prescriptionType"/>
    <result column="Valid_Status" jdbcType="CHAR" javaType="java.lang.String" property="validStatus"/>
    <collection property="prescriptionItems" ofType="edu.neu.hoso.model.PrescriptionItems">
      <id column="Prescription_Items_ID" jdbcType="INTEGER" javaType="java.lang.Integer" property="prescriptionItemsId"/>
      <result column="Prescription_ID" jdbcType="INTEGER" javaType="java.lang.Integer" property="prescriptionId"/>
      <result column="Drags_ID" jdbcType="INTEGER" javaType="java.lang.Integer" property="dragsId"/>
      <result column="Expense_Items_ID" jdbcType="INTEGER" javaType="java.lang.Integer" property="expenseItemsId"/>
      <result column="Drugs_Usage" jdbcType="CHAR" javaType="java.lang.String" property="drugsUsage"/>
      <result column="Dosage" jdbcType="DOUBLE" javaType="java.lang.Double" property="dosage"/>
      <result column="Times" jdbcType="INTEGER" javaType="java.lang.Integer" property="times"/>
      <result column="Days" jdbcType="INTEGER" javaType="java.lang.Integer" property="days"/>
      <result column="Quantity" jdbcType="INTEGER" javaType="java.lang.Integer" property="quantity"/>
      <result column="Drugs_Advice" jdbcType="VARCHAR" javaType="java.lang.String" property="drugsAdvice"/>
      <result column="Drugs_Dispensing_Status" jdbcType="CHAR" javaType="java.lang.String" property="drugsDispensingStatus"/>
      <result column="Actual_Quantity" jdbcType="INTEGER" javaType="java.lang.Integer" property="actualQuantity"/>
      <association property="drugs" javaType="edu.neu.hoso.model.Drugs" resultMap="edu.neu.hoso.model.DrugsMapper.BaseResultMap"/>
    </collection>
  </resultMap>
</mapper>