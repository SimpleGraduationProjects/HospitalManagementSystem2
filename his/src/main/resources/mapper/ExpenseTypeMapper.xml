<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="edu.neu.hoso.model.ExpenseTypeMapper" >
  <resultMap id="BaseResultMap" type="edu.neu.hoso.model.ExpenseType" >
    <constructor >
      <idArg column="Expense_Type_ID" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="Expense_Type_Code" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="Expense_Type_Name" jdbcType="VARCHAR" javaType="java.lang.String" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    Expense_Type_ID, Expense_Type_Code, Expense_Type_Name
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="edu.neu.hoso.example.ExpenseTypeExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from expense_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="edu.neu.hoso.example.ExpenseTypeExample" >
    delete from expense_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="edu.neu.hoso.model.ExpenseType" >
    <selectKey resultType="java.lang.Integer" keyProperty="expenseTypeId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into expense_type
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="expenseTypeCode != null" >
        Expense_Type_Code,
      </if>
      <if test="expenseTypeName != null" >
        Expense_Type_Name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="expenseTypeCode != null" >
        #{expenseTypeCode,jdbcType=VARCHAR},
      </if>
      <if test="expenseTypeName != null" >
        #{expenseTypeName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.neu.hoso.example.ExpenseTypeExample" resultType="java.lang.Integer" >
    select count(*) from expense_type
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update expense_type
    <set >
      <if test="record.expenseTypeId != null" >
        Expense_Type_ID = #{record.expenseTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.expenseTypeCode != null" >
        Expense_Type_Code = #{record.expenseTypeCode,jdbcType=VARCHAR},
      </if>
      <if test="record.expenseTypeName != null" >
        Expense_Type_Name = #{record.expenseTypeName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update expense_type
    set Expense_Type_ID = #{record.expenseTypeId,jdbcType=INTEGER},
      Expense_Type_Code = #{record.expenseTypeCode,jdbcType=VARCHAR},
      Expense_Type_Name = #{record.expenseTypeName,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.neu.hoso.model.ExpenseType" >
    update expense_type
    <set >
      <if test="expenseTypeCode != null" >
        Expense_Type_Code = #{expenseTypeCode,jdbcType=VARCHAR},
      </if>
      <if test="expenseTypeName != null" >
        Expense_Type_Name = #{expenseTypeName,jdbcType=VARCHAR},
      </if>
    </set>
    where Expense_Type_ID = #{expenseTypeId,jdbcType=INTEGER}
  </update>
</mapper>